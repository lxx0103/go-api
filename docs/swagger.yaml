basePath: /
definitions:
  auth.RoleResponse:
    properties:
      id:
        type: integer
      is_admin:
        type: integer
      is_default:
        type: integer
      name:
        type: string
      priority:
        type: integer
      status:
        type: integer
    type: object
  auth.SigninRequest:
    properties:
      email:
        type: string
      password:
        minLength: 6
        type: string
    required:
    - email
    - password
    type: object
  auth.SigninResponse:
    properties:
      token:
        type: string
      user:
        $ref: '#/definitions/auth.UserResponse'
    type: object
  auth.UserResponse:
    properties:
      email:
        type: string
      id:
        type: integer
      role_name:
        type: string
    type: object
  organization.OrganizationNew:
    properties:
      email:
        type: string
      name:
        maxLength: 64
        minLength: 1
        type: string
      password:
        minLength: 6
        type: string
      phone:
        minLength: 8
        type: string
    required:
    - email
    - name
    - password
    - phone
    type: object
  response.ErrorRes:
    properties:
      code:
        type: string
      message:
        type: string
    type: object
  response.ListRes:
    properties:
      count:
        type: integer
      data: {}
      page_id:
        type: integer
      page_size:
        type: integer
    type: object
  response.SuccessRes:
    properties:
      data: {}
    type: object
host: 0.0.0.0:8080
info:
  contact:
    email: lxx0103@yahoo.com
    name: Lewis
  description: API for go-api.
  title: go-api API
  version: "1.0"
paths:
  /organizations:
    post:
      consumes:
      - application/json
      operationId: "001"
      parameters:
      - description: 组织信息
        in: body
        name: organization_info
        required: true
        schema:
          $ref: '#/definitions/organization.OrganizationNew'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.SuccessRes'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorRes'
      summary: 新建组织
      tags:
      - 组织管理
  /roles:
    get:
      consumes:
      - application/json
      operationId: "18"
      parameters:
      - description: 页码
        in: query
        name: page_id
        required: true
        type: integer
      - description: 每页行数（5/10/15/20）
        in: query
        name: page_size
        required: true
        type: integer
      - description: 角色名称
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.ListRes'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/auth.RoleResponse'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorRes'
      summary: 角色列表
      tags:
      - 角色管理
  /signin:
    post:
      consumes:
      - application/json
      operationId: "002"
      parameters:
      - description: 登录类型
        in: body
        name: signin_info
        required: true
        schema:
          $ref: '#/definitions/auth.SigninRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.SuccessRes'
            - properties:
                data:
                  $ref: '#/definitions/auth.SigninResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorRes'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.ErrorRes'
      summary: 登录
      tags:
      - 用户权限
swagger: "2.0"
